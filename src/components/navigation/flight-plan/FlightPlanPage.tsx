import React, { useState } from 'react';
import { Container } from './FlightPlanPage.styles';
import { FlightPlanTable } from './FlightPlanTable';
import { RouteVisualization } from './visualization';
import type { RouteLeg } from './types';

export const FlightPlanPage: React.FC = () => {
  const [legs, setLegs] = useState<RouteLeg[]>([
    {
      id: '1',
      name: '–í–∑–ª–µ—Ç',
      magneticCourse: 0,
      distance: 0
    },
    {
      id: '2', 
      name: '–ü–ü–ú1',
      magneticCourse: 0,
      distance: 0
    },
    {
      id: '3',
      name: '–ü–æ—Å–∞–¥–∫–∞',
      magneticCourse: 0,
      distance: 0
    }
  ]);

  const [trueAirspeed, setTrueAirspeed] = useState(250);
  const [windDirection, setWindDirection] = useState(0);
  const [windSpeed, setWindSpeed] = useState(0);

  return (
    <Container>
      <h2>üß≠ –†–∞—Å—á–µ—Ç –†–ü–ü (–®—Ç—É—Ä–º–∞–Ω—Å–∫–∏–π –ë–æ—Ä—Ç–æ–≤–æ–π –ñ—É—Ä–Ω–∞–ª)</h2>
      <p>–ü–æ–ª–Ω—ã–π —Ä–∞—Å—á–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–ª–µ—Ç–∞ –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∞ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —É—á–∞—Å—Ç–∫–∞–º–∏</p>

      {/* –ü–∞–Ω–µ–ª—å –æ–±—â–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ */}
      <div style={{ 
        background: 'rgba(26, 111, 196, 0.1)',
        padding: '1.5rem',
        borderRadius: '8px',
        marginBottom: '2rem',
        border: '1px solid rgba(26, 111, 196, 0.3)'
      }}>
        <h3 style={{ color: '#64ffda', marginBottom: '1rem', textAlign: 'center' }}>
          –û–±—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–∞—Ä—à—Ä—É—Ç–∞
        </h3>
        
        <div style={{ 
          display: 'grid', 
          gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', 
          gap: '1rem',
          maxWidth: '600px',
          margin: '0 auto'
        }}>
          <div>
            <label style={{ display: 'block', marginBottom: '0.5rem', color: '#e6f1ff' }}>
              –í–æ–∑–¥—É—à–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å V (–∫–º/—á):
            </label>
            <input
              type="number"
              value={trueAirspeed}
              onChange={(e) => setTrueAirspeed(Number(e.target.value))}
              style={{
                width: '100%',
                padding: '0.75rem',
                background: 'rgba(10, 25, 47, 0.6)',
                border: '1px solid #1a6fc4',
                borderRadius: '6px',
                color: '#e6f1ff',
                fontSize: '1rem'
              }}
            />
          </div>

          <div>
            <label style={{ display: 'block', marginBottom: '0.5rem', color: '#e6f1ff' }}>
              –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞ (–≥—Ä–∞–¥—É—Å—ã):
            </label>
            <input
              type="number"
              min="0"
              max="360"
              value={windDirection}
              onChange={(e) => setWindDirection(Number(e.target.value))}
              style={{
                width: '100%',
                padding: '0.75rem',
                background: 'rgba(10, 25, 47, 0.6)',
                border: '1px solid #1a6fc4',
                borderRadius: '6px',
                color: '#e6f1ff',
                fontSize: '1rem'
              }}
            />
          </div>

          <div>
            <label style={{ display: 'block', marginBottom: '0.5rem', color: '#e6f1ff' }}>
              –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ (–∫–º/—á):
            </label>
            <input
              type="number"
              min="0"
              value={windSpeed}
              onChange={(e) => setWindSpeed(Number(e.target.value))}
              style={{
                width: '100%',
                padding: '0.75rem',
                background: 'rgba(10, 25, 47, 0.6)',
                border: '1px solid #1a6fc4',
                borderRadius: '6px',
                color: '#e6f1ff',
                fontSize: '1rem'
              }}
            />
          </div>
        </div>
      </div>

      <FlightPlanTable
        legs={legs}
        onLegsChange={setLegs}
        trueAirspeed={trueAirspeed}
        windDirection={windDirection}
        windSpeed={windSpeed}
      />

      {/* –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ */}
      <RouteVisualization
        legs={legs.map((leg) => ({
          name: leg.name,
          magneticHeading: leg.magneticCourse,
          distance: leg.distance,
          driftAngle: 0, // –í—Ä–µ–º–µ–Ω–Ω–æ
          groundSpeed: trueAirspeed, // –í—Ä–µ–º–µ–Ω–Ω–æ
          legTime: leg.distance > 0 ? (leg.distance / trueAirspeed) * 60 : 0 // –í—Ä–µ–º–µ–Ω–Ω–æ
        }))}
        windDirection={windDirection}
        windSpeed={windSpeed}
      />

      <div style={{ 
        marginTop: '2rem',
        padding: '1rem',
        background: 'rgba(100, 255, 218, 0.1)',
        borderRadius: '8px',
        border: '1px solid rgba(100, 255, 218, 0.3)',
        fontSize: '0.9rem',
        color: '#8892b0'
      }}>
        <strong>üí° –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</strong>
        <ul style={{ margin: '0.5rem 0', paddingLeft: '1.5rem' }}>
          <li>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–æ–∑–¥—É—à–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å V –¥–ª—è –≤—Å–µ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞</li>
          <li>–ó–∞–¥–∞–π—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ (–º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–µ—Ç–µ—Ä - –æ—Ç–∫—É–¥–∞ –¥—É–µ—Ç)</li>
          <li>–î–ª—è –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–∫–∞ —É–∫–∞–∂–∏—Ç–µ –ú–ü–£ –∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ</li>
          <li>–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç–∞–µ—Ç –£–°, –ú–ö, W –∏ –≤—Ä–µ–º—è</li>
          <li>–ú–∞—Ä—à—Ä—É—Ç: <strong>–í–∑–ª–µ—Ç ‚Üí –ü–ü–ú1 ‚Üí –ü–ü–ú2 ‚Üí ... ‚Üí –ü–æ—Å–∞–¥–∫–∞</strong></li>
          <li><span style={{ color: '#ff6b6b' }}>–£–°+</span> - –ø—Ä–∞–≤—ã–π —Å–Ω–æ—Å, <span style={{ color: '#64ffda' }}>–£–°-</span> - –ª–µ–≤—ã–π —Å–Ω–æ—Å</li>
        </ul>
      </div>
    </Container>
  );
};