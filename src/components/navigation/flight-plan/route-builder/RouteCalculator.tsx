// components/navigation/flight-plan/route-builder/RouteCalculator.tsx
import React from 'react';
import {
  CalculatorContainer,
  CalculatorHeader,
  CalculatorTable,
  TableHeader,
  TableRow,
  TableCell,
  SummaryRow,
  SectionTitle,
  ParametersGrid,
  ParameterItem
} from './RouteCalculator.styles';
import type { Waypoint, RouteLeg } from '../types';
import { calculateRouteLegs, calculateTotalDistance } from './utils/calculations';
import { formatDistance } from './utils/helpers';

interface RouteCalculatorProps {
  routeLegs: RouteLeg[];
  selectedWaypoints: Waypoint[];
}

export const RouteCalculator: React.FC<RouteCalculatorProps> = ({
  selectedWaypoints
}) => {
  const routeLegsInfo = calculateRouteLegs(selectedWaypoints);
  const totalDistance = calculateTotalDistance(selectedWaypoints);
  const totalTime = routeLegsInfo.reduce((sum, leg) => sum + leg.time, 0);

  // –†–∞—Å—á–µ—Ç –æ–±—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–ª–µ—Ç–∞
  const calculateTotalFlightTime = () => {
    const totalMinutes = totalTime;
    const hours = Math.floor(totalMinutes / 60);
    const minutes = Math.round(totalMinutes % 60);
    
    if (hours > 0) {
      return `${hours}—á ${minutes}–º`;
    } else {
      return `${minutes}–º`;
    }
  };

  // –†–∞—Å—á–µ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ –º–∞–≥–Ω–∏—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞
  const calculateAverageCourse = () => {
    if (routeLegsInfo.length === 0) return 0;
    const sum = routeLegsInfo.reduce((total, leg) => total + leg.course, 0);
    return Math.round(sum / routeLegsInfo.length);
  };

  return (
    <CalculatorContainer>
      <SectionTitle>üßÆ –†–∞—Å—á–µ—Ç –†–ü–ü (–®—Ç—É—Ä–º–∞–Ω—Å–∫–∏–π –ë–æ—Ä—Ç–æ–≤–æ–π –ñ—É—Ä–Ω–∞–ª)</SectionTitle>
      
      {/* –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–∞—Ä—à—Ä—É—Ç–∞ */}
      <ParametersGrid>
        <ParameterItem>
          <div className="label">–û–±—â–µ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ</div>
          <div className="value">{formatDistance(totalDistance)}</div>
        </ParameterItem>
        <ParameterItem>
          <div className="label">–í—Ä–µ–º—è –ø–æ–ª–µ—Ç–∞ (250 –∫–º/—á)</div>
          <div className="value">{calculateTotalFlightTime()}</div>
        </ParameterItem>
        <ParameterItem>
          <div className="label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∫–æ–≤</div>
          <div className="value">{selectedWaypoints.length - 1}</div>
        </ParameterItem>
        <ParameterItem>
          <div className="label">–°—Ä–µ–¥–Ω–∏–π –ó–ú–ü–£</div>
          <div className="value">{calculateAverageCourse()}¬∞</div>
        </ParameterItem>
      </ParametersGrid>

      {/* –î–µ—Ç–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –†–ü–ü */}
      <CalculatorHeader>üìã –î–µ—Ç–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç —É—á–∞—Å—Ç–∫–æ–≤ –º–∞—Ä—à—Ä—É—Ç–∞</CalculatorHeader>
      
      <CalculatorTable>
        <thead>
          <TableRow>
            <TableHeader>–£—á–∞—Å—Ç–æ–∫</TableHeader>
            <TableHeader>–û—Ç ‚Üí –î–æ</TableHeader>
            <TableHeader>–ó–ú–ü–£</TableHeader>
            <TableHeader>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ</TableHeader>
            <TableHeader>–í—Ä–µ–º—è</TableHeader>
          </TableRow>
        </thead>
        <tbody>
          {routeLegsInfo.map((leg, index) => (
            <TableRow key={index}>
              <TableCell style={{ fontWeight: 'bold', color: '#64ffda' }}>
                –£—á. {index + 1}
              </TableCell>
              <TableCell>
                <div style={{ fontSize: '0.9rem' }}>
                  <strong>{selectedWaypoints[index]?.name}</strong>
                </div>
                <div style={{ fontSize: '0.8rem', color: '#8892b0' }}>
                  ‚Üí {selectedWaypoints[index + 1]?.name}
                </div>
              </TableCell>
              <TableCell style={{ fontWeight: 'bold' }}>
                {leg.course}¬∞
              </TableCell>
              <TableCell>
                {leg.distance} –∫–º
              </TableCell>
              <TableCell style={{ fontWeight: 'bold' }}>
                {Math.round(leg.time)} –º–∏–Ω
              </TableCell>
            </TableRow>
          ))}
        </tbody>
        <tfoot>
          <SummaryRow>
            <TableCell colSpan={3} style={{ textAlign: 'right', fontWeight: 'bold' }}>
              –ò—Ç–æ–≥–æ –ø–æ –º–∞—Ä—à—Ä—É—Ç—É:
            </TableCell>
            <TableCell style={{ fontWeight: 'bold' }}>
              {formatDistance(totalDistance)}
            </TableCell>
            <TableCell style={{ fontWeight: 'bold' }}>
              {calculateTotalFlightTime()}
            </TableCell>
          </SummaryRow>
        </tfoot>
      </CalculatorTable>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div style={{ 
        marginTop: '1.5rem',
        padding: '1rem',
        background: 'rgba(100, 255, 218, 0.05)',
        border: '1px solid rgba(100, 255, 218, 0.2)',
        borderRadius: '8px'
      }}>
        <h4 style={{ color: '#64ffda', marginBottom: '0.75rem' }}>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–æ–ª–µ—Ç—É</h4>
        <div style={{ 
          display: 'grid', 
          gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
          gap: '1rem',
          fontSize: '0.85rem',
          color: '#8892b0'
        }}>
          <div>
            <strong style={{ color: '#e6f1ff' }}>–ö–æ–Ω—Ç—Ä–æ–ª—å –≤—Ä–µ–º–µ–Ω–∏:</strong>
            <ul style={{ margin: '0.5rem 0', paddingLeft: '1.2rem' }}>
              <li>–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –≤—Ä–µ–º—è –ø—Ä–æ–ª–µ—Ç–∞ –∫–∞–∂–¥–æ–≥–æ –ü–ü–ú</li>
              <li>–ò–º–µ–π—Ç–µ –∑–∞–ø–∞—Å —Ç–æ–ø–ª–∏–≤–∞ +30%</li>
              <li>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–µ—Ç—Ä–∞</li>
            </ul>
          </div>
          <div>
            <strong style={{ color: '#e6f1ff' }}>–ù–∞–≤–∏–≥–∞—Ü–∏—è:</strong>
            <ul style={{ margin: '0.5rem 0', paddingLeft: '1.2rem' }}>
              <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ VOR/DME –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è</li>
              <li>–í–∏–∑—É–∞–ª—å–Ω–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ –ü–ü–ú</li>
              <li>–ò–º–µ–π—Ç–µ –∑–∞–ø–∞—Å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –º–∞—Ä—à—Ä—É—Ç–∞</li>
            </ul>
          </div>
        </div>
      </div>
    </CalculatorContainer>
  );
};