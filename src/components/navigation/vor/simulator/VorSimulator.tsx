import React, { useState, useEffect } from 'react';
import { VORReceiver } from '../VORReceiver/VORReceiver';
import { NavigationMap } from '../NavigationMap/NavigationMap';
import { CDINeedle } from '../VORReceiver/CDINeedle';
import { useVOR } from '../../../../hooks/useVOR';
import type { VORStation } from '../../../../hooks/useVOR';
import './VorSimulator.css';

export const VorSimulator: React.FC = () => {
  const {
    aircraftPosition,
    setAircraftPosition,
    selectedFrequency,
    setSelectedFrequency,
    obsCourse,
    setObsCourse,
    cdiDeflection,
    toFromIndicator,
    isSignalValid,
    currentStation,
    vorStations
  } = useVOR();

  const [showDeviationWarning, setShowDeviationWarning] = useState(false);

  useEffect(() => {
    if (Math.abs(cdiDeflection) > 1) {
      setShowDeviationWarning(true);
    } else {
      setShowDeviationWarning(false);
    }
  }, [cdiDeflection]);

  const handleStationSelect = (station: VORStation) => {
    setSelectedFrequency(station.frequency);
  };

  const getDeflectionStatus = (deflection: number): string => {
    const absDeflection = Math.abs(deflection);
    if (absDeflection < 0.1) return '–¶–µ–Ω—Ç—Ä (–∏–¥–µ–∞–ª—å–Ω–æ)';
    if (absDeflection < 0.3) return '–ù–µ–±–æ–ª—å—à–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ';
    if (absDeflection < 0.7) return '–°—Ä–µ–¥–Ω–µ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ';
    return '–°–∏–ª—å–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ';
  };

  const getDeflectionDirection = (deflection: number): string => {
    if (deflection > 0) return '–í–ø—Ä–∞–≤–æ';
    if (deflection < 0) return '–í–ª–µ–≤–æ';
    return '–ü–æ —Ü–µ–Ω—Ç—Ä—É';
  };

  return (
    <div className="vor-simulator">
      <div className="simulator-header">
        <h2>–¢—Ä–µ–Ω–∞–∂–µ—Ä VOR –Ω–∞–≤–∏–≥–∞—Ü–∏–∏</h2>
        <p className="simulator-description">
          –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Å–∏–º—É–ª—è—Ç–æ—Ä –¥–ª—è –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–≤—ã–∫–æ–≤ —Ä–∞–±–æ—Ç—ã —Å VOR-–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º
        </p>
      </div>

      {showDeviationWarning && (
        <div className="deviation-warning">
          <div className="warning-icon">‚ö†Ô∏è</div>
          <div className="warning-text">
            –ë–æ–ª—å—à–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç –∫—É—Ä—Å–∞! –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 10 –≥—Ä–∞–¥—É—Å–æ–≤.
          </div>
        </div>
      )}

      <div className="simulator-layout">
        {/* –ö–∞—Ä—Ç–∞ */}
        <div className="map-container">
          <NavigationMap
            aircraftPosition={aircraftPosition}
            onAircraftMove={setAircraftPosition}
            vorStations={vorStations}
            selectedStation={currentStation}
            onStationSelect={handleStationSelect}
            obsCourse={obsCourse}
          />
        </div>

        {/* –ü—Ä–∏–µ–º–Ω–∏–∫ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ */}
        <div className="receiver-container">
          <VORReceiver
            selectedFrequency={selectedFrequency}
            onFrequencyChange={setSelectedFrequency}
            obsCourse={obsCourse}
            onObsCourseChange={setObsCourse}
            isSignalValid={isSignalValid}
            currentStation={currentStation}
            toFromIndicator={toFromIndicator}
          />
        </div>

        {/* CDI –ø–∞–Ω–µ–ª—å */}
        <div className="cdi-panel">
          <div className="cdi-panel-header">
            <h3>–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∫—É—Ä—Å–æ–≤–æ–≥–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è (CDI)</h3>
          </div>
          
          <div className="cdi-visualization">
            <CDINeedle deflection={cdiDeflection} />
            
            <div className="cdi-info-grid">
              <div className="cdi-data-display">
                <div className="cdi-data-item">
                  <span className="cdi-data-label">–°—Ç–∞—Ç—É—Å:</span>
                  <span className="cdi-data-value">{getDeflectionStatus(cdiDeflection)}</span>
                </div>
                <div className="cdi-data-item">
                  <span className="cdi-data-label">–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</span>
                  <span className="cdi-data-value">{getDeflectionDirection(cdiDeflection)}</span>
                </div>
                <div className="cdi-data-item">
                  <span className="cdi-data-label">–í–µ–ª–∏—á–∏–Ω–∞:</span>
                  <span className="cdi-data-value">{Math.abs(cdiDeflection * 10).toFixed(1)}¬∞</span>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* –ü–∞–Ω–µ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ */}
        <div className="info-panel">
          <h4>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–æ–º</h4>
          <div className="info-content">
            <div className="info-item">
              <h5>üéØ –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∫–∞—Ä—Ç–µ</h5>
              <p>–ö–ª–∏–∫–Ω–∏—Ç–µ –∏–ª–∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Å–∞–º–æ–ª–µ—Ç –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏. –°—Ç–∞–Ω—Ü–∏–∏ VOR –æ—Ç–º–µ—á–µ–Ω—ã —Å–∏–Ω–∏–º–∏ –º–∞—Ä–∫–µ—Ä–∞–º–∏.</p>
            </div>
            
            <div className="info-item">
              <h5>üìª –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è</h5>
              <p>–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å—Ç–æ—Ç—É VOR —Å—Ç–∞–Ω—Ü–∏–∏ –∏–ª–∏ –∫–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –º–∞—Ä–∫–µ—Ä —Å—Ç–∞–Ω—Ü–∏–∏ –Ω–∞ –∫–∞—Ä—Ç–µ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.</p>
            </div>
            
            <div className="info-item">
              <h5>üß≠ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫—É—Ä—Å–∞ (OBS)</h5>
              <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä—É—á–∫—É OBS –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∂–µ–ª–∞–µ–º–æ–≥–æ –∫—É—Ä—Å–∞. CDI –ø–æ–∫–∞–∂–µ—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–∞–¥–∏–∞–ª–∞.</p>
            </div>
            
            <div className="info-item">
              <h5>üìä –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –ø–æ–∫–∞–∑–∞–Ω–∏–π</h5>
              <p>–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ CDI - –Ω–∞ –∫—É—Ä—Å–µ. TO/FROM –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Å—Ç–∞–Ω—Ü–∏–∏.</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};
