// src/components/meteorology/Meteorology.tsx
import React, { useState, useEffect, useCallback } from 'react';
import { Container, Content, PageHeader, PageTitle, PageDescription } from './Meteorology.styles';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import { AirportSelector } from '../../../src/components/meteorology/components/AirportSelector';
import { WeatherTabs} from '../../../src/components/meteorology/components/WeatherTabs';
import type { WeatherDataType } from '../../../src/components/meteorology/components/WeatherTabs';
import { WeatherVisualization } from '../../../src/components/meteorology/components/WeatherVisualization';
import { MetarDisplay } from '../../../src/components/meteorology/components/MetarDisplay';
import { TafDisplay } from '../../../src/components/meteorology/components/TafDisplay';
import type { ParsedTaf } from '../../../src/components/meteorology/utils/tafParser';
import { SigmetDisplay } from '../../../src/components/meteorology/components/SigmetDisplay';
import type { SigmetData  } from '../../../src/components/meteorology/utils/sigmetParser';

// –•—É–∫–∏ –∏ —É—Ç–∏–ª–∏—Ç—ã
import { useMetarData } from '../../../src/components/meteorology/hooks';
import { parseTafEnhanced, parseTafSafely } from '../../../src/components/meteorology/utils/tafParser';
import { fetchTafData,  } from '../../../src/components/meteorology/utils/tafParser';
import { fetchSigmetData, parseSigmet, } from '../../../src/components/meteorology/utils/sigmetParser';

const Meteorology: React.FC = () => {
  const {
    icaoCode,
    metarData,
    rawMetar,
    loading,
    error,
    recentAirports,
    fetchData,
    clearError,
    setIcaoCode
  } = useMetarData();

  const [activeTab, setActiveTab] = useState<WeatherDataType>('metar');
  const [tafData, setTafData] = useState<ParsedTaf | null>(null);
  const [sigmetData, setSigmetData] = useState<SigmetData[]>([]);
  const [loadingTaf, setLoadingTaf] = useState(false);
  const [loadingSigmet, setLoadingSigmet] = useState(false);
  const [tafError, setTafError] = useState<string | null>(null);
  const [lastTafFetchTime, setLastTafFetchTime] = useState<number>(0);

  // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ TAF –¥–∞–Ω–Ω—ã—Ö –Ω–∞ 10 –º–∏–Ω—É—Ç
  const TAF_CACHE_DURATION = 10 * 60 * 1000;

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º useCallback –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é
  const loadTafData = useCallback(async (code: string) => {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—ç—à–∞
    const now = Date.now();
    if (code === icaoCode && tafData && (now - lastTafFetchTime) < TAF_CACHE_DURATION) {
      console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É—é –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ TAF');
      return;
    }

    setLoadingTaf(true);
    setTafError(null);
    try {
      console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ REAL TAF –¥–ª—è –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞:', code);
      console.time(`TAF Fetch ${code}`);
      const rawTaf = await fetchTafData(code);
      console.timeEnd(`TAF Fetch ${code}`);
      
      console.log('üì® –ü–æ–ª—É—á–µ–Ω TAF:', rawTaf.substring(0, 100) + '...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ mock –ª–∏ —ç—Ç–æ
      if (rawTaf.includes('üé≠ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è mock') || rawTaf.includes('üéØ –ò—Å–ø–æ–ª—å–∑—É—é —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π')) {
        console.warn('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è mock –¥–∞–Ω–Ω—ã–µ TAF');
        setTafError('–†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ TAF –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ü–æ–∫–∞–∑–∞–Ω—ã –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ.');
      }
      
      if (!rawTaf || rawTaf.includes('No TAF available') || rawTaf.length < 10) {
        setTafError('TAF –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞');
        setTafData(null);
        return;
      }
      
      let parsedTaf;
      try {
        console.time(`TAF Parse ${code}`);
        parsedTaf = parseTafEnhanced(rawTaf);
        console.timeEnd(`TAF Parse ${code}`);
        
        console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ TAF:', parsedTaf);
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        if (!parsedTaf.issuanceTime || !parsedTaf.validity.from || !parsedTaf.validity.to) {
          console.warn('‚ö†Ô∏è –ù–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ TAF, –ø—Ä–æ–±—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä');
          parsedTaf = parseTafSafely(rawTaf);
        }
      } catch (enhancedError) {
        console.warn('‚ö†Ô∏è –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π:', enhancedError);
        parsedTaf = parseTafSafely(rawTaf);
      }
      
      if (parsedTaf && parsedTaf.forecast && parsedTaf.forecast.length > 0) {
        setTafData(parsedTaf);
        setLastTafFetchTime(now);
        console.log('üìä TAF –¥–∞–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
      } else {
        setTafError('–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ TAF');
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ TAF - –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≥–Ω–æ–∑–∞');
      }
    } catch (err) {
      const errorMessage = err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
      setTafError(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ TAF: ${errorMessage}`);
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ TAF:', err);
      setTafData(null);
    } finally {
      setLoadingTaf(false);
    }
  }, [icaoCode, tafData, lastTafFetchTime, TAF_CACHE_DURATION]); // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

  const loadSigmetData = useCallback(async (code: string) => {
    setLoadingSigmet(true);
    try {
      const rawSigmet = await fetchSigmetData(code);
      const parsedSigmet = parseSigmet(rawSigmet);
      setSigmetData(parsedSigmet);
    } catch (err) {
      console.warn('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ SIGMET:', err);
      setSigmetData([]);
    } finally {
      setLoadingSigmet(false);
    }
  }, []);

  // –ó–∞–≥—Ä—É–∑–∫–∞ TAF –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞
  useEffect(() => {
    if (icaoCode && icaoCode.length === 4) {
      loadTafData(icaoCode);
      loadSigmetData(icaoCode);
    } else {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –∫–æ–¥ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π
      setTafData(null);
      setSigmetData([]);
      setTafError(null);
    }
  }, [icaoCode, loadTafData, loadSigmetData]); // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

  const handleSearch = (code: string) => {
    fetchData(code);
    setActiveTab('metar'); // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ METAR –ø–æ—Å–ª–µ –Ω–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞
  };

  const handleCodeChange = (code: string) => {
    setIcaoCode(code);
    if (error) clearError();
    setTafError(null);
  };

  const renderActiveTabContent = () => {
    if (!icaoCode) return null;

    switch (activeTab) {
      case 'metar':
        if (!metarData) {
          return (
            <div style={{ textAlign: 'center', padding: '40px', color: '#8892b0' }}>
              {loading ? 'üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö METAR...' : '‚ùå –î–∞–Ω–Ω—ã–µ METAR –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è —ç—Ç–æ–≥–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞'}
            </div>
          );
        }
        return (
          <>
            <WeatherVisualization metarData={metarData} />
            <MetarDisplay rawMetar={rawMetar} metarData={metarData} />
          </>
        );

      case 'taf':
        if (loadingTaf) {
          return (
            <div style={{ textAlign: 'center', padding: '40px', color: '#8892b0' }}>
              <div style={{
                width: '40px',
                height: '40px',
                border: '4px solid rgba(100, 255, 218, 0.3)',
                borderLeft: '4px solid #64ffda',
                borderRadius: '50%',
                animation: 'spin 1s linear infinite',
                margin: '0 auto 20px auto'
              }}></div>
              <p>üìÖ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞ TAF...</p>
              <p style={{ fontSize: '0.9rem', marginTop: '10px' }}>
                –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –Ω–∞ 24-30 —á–∞—Å–æ–≤
              </p>
            </div>
          );
        }

        if (tafError) {
          return (
            <div style={{ 
              textAlign: 'center', 
              padding: '40px', 
              color: '#ff6b6b',
              background: 'rgba(255, 107, 107, 0.1)',
              border: '1px solid #ff6b6b',
              borderRadius: '8px',
              margin: '20px 0'
            }}>
              <h4 style={{ marginBottom: '15px' }}>‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ TAF</h4>
              <p>{tafError}</p>
              <button 
                onClick={() => loadTafData(icaoCode)}
                style={{
                  marginTop: '15px',
                  padding: '10px 20px',
                  background: '#ff6b6b',
                  color: 'white',
                  border: 'none',
                  borderRadius: '6px',
                  cursor: 'pointer'
                }}
              >
                üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É
              </button>
            </div>
          );
        }
        
        if (!tafData) {
          return (
            <div style={{ textAlign: 'center', padding: '40px', color: '#8892b0' }}>
              <h4 style={{ color: '#ff6b6b', marginBottom: '15px' }}>‚ùå –î–∞–Ω–Ω—ã–µ TAF –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</h4>
              <p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å TAF –¥–ª—è –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ {icaoCode}</p>
            </div>
          );
        }
        
        return (
          <TafDisplay tafData={tafData} icaoCode={icaoCode} />
        );

      case 'sigmet':
        return (
          <SigmetDisplay sigmetData={sigmetData} icaoCode={icaoCode} />
        );

      case 'airep':
        return (
          <div style={{ textAlign: 'center', padding: '40px', color: '#8892b0' }}>
            <div style={{ fontSize: '3rem', marginBottom: '20px' }}>üöß</div>
            <h3 style={{ color: '#ffd700', marginBottom: '15px' }}>–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</h3>
            <p>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å PIREP (–æ—Ç—á–µ—Ç—ã –ø–∏–ª–æ—Ç–æ–≤) –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏</p>
          </div>
        );

      default:
        return null;
    }
  };

  console.log('Meteorology debug:', {
    icaoCode,
    hasMetar: !!metarData,
    hasTaf: !!tafData,
    hasSigmet: sigmetData.length > 0,
    activeTab,
    loading,
    loadingTaf,
    loadingSigmet,
    tafError
  });

  return (
    <Container>
      <Content>
        <PageHeader>
          <PageTitle>–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è –ú–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—è</PageTitle>
          <PageDescription>
            –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–∏—Ö –∏ –ø—Ä–æ–≥–Ω–æ–∑–Ω—ã—Ö –º–µ—Ç–µ–æ—É—Å–ª–æ–≤–∏–π. 
            METAR, TAF, SIGMET/AIRMET –≤ –æ–¥–Ω–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –≤–∑–≤–µ—à–µ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π.
          </PageDescription>
        </PageHeader>

        <AirportSelector
          icaoCode={icaoCode}
          onCodeChange={handleCodeChange}
          onSearch={handleSearch}
          recentAirports={recentAirports}
          loading={loading}
        />

        {error && (
          <div style={{ 
            background: 'rgba(255, 107, 107, 0.1)', 
            border: '1px solid #ff6b6b',
            borderRadius: '8px',
            padding: '15px',
            marginBottom: '20px',
            color: '#ff6b6b'
          }}>
            <strong>‚ùå –û—à–∏–±–∫–∞ METAR:</strong> {error}
            <button 
              onClick={clearError}
              style={{
                marginLeft: '15px',
                padding: '5px 10px',
                background: 'transparent',
                color: '#ff6b6b',
                border: '1px solid #ff6b6b',
                borderRadius: '4px',
                cursor: 'pointer'
              }}
            >
              –°–∫—Ä—ã—Ç—å
            </button>
          </div>
        )}

        {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞–±—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ METAR */}
        {icaoCode && metarData && (
          <WeatherTabs
            activeTab={activeTab}
            onTabChange={setActiveTab}
            hasMetar={!!metarData}
            hasTaf={!!tafData && !tafError}
            hasSigmet={sigmetData.length > 0}
            hasAirep={false}
          />
        )}

        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∑–∞–≥—Ä—É–∑–∫–∏ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º */}
        {(loading || loadingTaf || loadingSigmet) && (
          <div style={{ textAlign: 'center', padding: '40px' }}>
            <div style={{
              width: '40px',
              height: '40px',
              border: '4px solid rgba(100, 255, 218, 0.3)',
              borderLeft: '4px solid #64ffda',
              borderRadius: '50%',
              animation: 'spin 1s linear infinite',
              margin: '0 auto 20px auto'
            }}></div>
            <p style={{ color: '#64ffda' }}>
              {loading && 'üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö METAR...'}
              {loadingTaf && 'üìÖ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞ TAF...'}
              {loadingSigmet && '‚ö†Ô∏è –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π...'}
            </p>
            <div style={{
              marginTop: '10px',
              fontSize: '0.9rem',
              color: '#8892b0'
            }}>
              {loading && '–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–∞–¥–µ–∂–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏: AVWX, CheckWX, AviationAPI'}
              {loadingTaf && '–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –Ω–∞ 24-30 —á–∞—Å–æ–≤'}
            </div>
            <style>{`
              @keyframes spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
              }
            `}</style>
          </div>
        )}

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        {!loading && !loadingTaf && !loadingSigmet && renderActiveTabContent()}

        {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω –∫–æ–≥–¥–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω */}
        {!icaoCode && !loading && (
          <div style={{ 
            textAlign: 'center', 
            padding: '60px 20px', 
            color: '#8892b0',
            background: 'rgba(10, 25, 47, 0.3)',
            borderRadius: '12px',
            border: '2px dashed #1a6fc4',
            marginTop: '30px'
          }}>
            <h3 style={{ color: '#64ffda', marginBottom: '20px' }}>üå§Ô∏è –ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–µ–æ–º–æ–¥—É–ª—å</h3>
            <p style={{ marginBottom: '30px', fontSize: '1.1rem' }}>
              –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, UUEE, KJFK, LFPG) –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç–µ–æ–¥–∞–Ω–Ω—ã—Ö
            </p>
            
            <div style={{ 
              display: 'grid', 
              gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
              gap: '20px',
              marginTop: '30px'
            }}>
              <div style={{ padding: '20px', background: 'rgba(26, 111, 196, 0.1)', borderRadius: '8px' }}>
                <div style={{ fontSize: '2rem', marginBottom: '10px' }}>üå§Ô∏è</div>
                <h4 style={{ color: '#e6f1ff', marginBottom: '10px' }}>METAR</h4>
                <p>–¢–µ–∫—É—â–∏–µ –ø–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –≤ –∞—ç—Ä–æ–ø–æ—Ä—Ç—É –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</p>
              </div>
              
              <div style={{ padding: '20px', background: 'rgba(100, 255, 218, 0.1)', borderRadius: '8px' }}>
                <div style={{ fontSize: '2rem', marginBottom: '10px' }}>üìÖ</div>
                <h4 style={{ color: '#e6f1ff', marginBottom: '10px' }}>TAF</h4>
                <p>–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ 24-30 —á–∞—Å–æ–≤ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–æ–π</p>
              </div>
              
              <div style={{ padding: '20px', background: 'rgba(255, 107, 107, 0.1)', borderRadius: '8px' }}>
                <div style={{ fontSize: '2rem', marginBottom: '10px' }}>‚ö†Ô∏è</div>
                <h4 style={{ color: '#e6f1ff', marginBottom: '10px' }}>SIGMET/AIRMET</h4>
                <p>–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ–± –æ–ø–∞—Å–Ω—ã—Ö –º–µ—Ç–µ–æ—è–≤–ª–µ–Ω–∏—è—Ö</p>
              </div>

              <div style={{ padding: '20px', background: 'rgba(157, 78, 221, 0.1)', borderRadius: '8px' }}>
                <div style={{ fontSize: '2rem', marginBottom: '10px' }}>‚úàÔ∏è</div>
                <h4 style={{ color: '#e6f1ff', marginBottom: '10px' }}>PIREP</h4>
                <p>–û—Ç—á–µ—Ç—ã –ø–∏–ª–æ—Ç–æ–≤ –æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö (—Å–∫–æ—Ä–æ)</p>
              </div>
            </div>

            <div style={{ marginTop: '40px', padding: '20px', background: 'rgba(26, 111, 196, 0.05)', borderRadius: '8px' }}>
              <h4 style={{ color: '#64ffda', marginBottom: '15px' }}>üìã –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç—ã:</h4>
              <div style={{ display: 'flex', gap: '10px', justifyContent: 'center', flexWrap: 'wrap' }}>
                {['UUEE', 'UUDD', 'UUWW', 'KJFK', 'KLAX', 'EGLL', 'LFPG', 'EDDF'].map(code => (
                  <button
                    key={code}
                    onClick={() => handleSearch(code)}
                    style={{
                      padding: '8px 16px',
                      background: 'rgba(100, 255, 218, 0.1)',
                      border: '1px solid #64ffda',
                      borderRadius: '6px',
                      color: '#64ffda',
                      cursor: 'pointer',
                      transition: 'all 0.3s ease'
                    }}
                    onMouseEnter={(e) => {
                      e.currentTarget.style.background = 'rgba(100, 255, 218, 0.2)';
                      e.currentTarget.style.transform = 'translateY(-2px)';
                    }}
                    onMouseLeave={(e) => {
                      e.currentTarget.style.background = 'rgba(100, 255, 218, 0.1)';
                      e.currentTarget.style.transform = 'translateY(0)';
                    }}
                  >
                    {code}
                  </button>
                ))}
              </div>
            </div>
          </div>
        )}
      </Content>
    </Container>
  );
};

export default Meteorology;